{"version":3,"sources":["global-styles.ts","context/shop.context.tsx","context/receipt.context.tsx","providers.tsx","components/button/styles.ts","components/button/index.tsx","components/TextInput/styles.ts","components/TextInput/index.tsx","sections/additems.section.tsx","components/typography/styles.ts","components/typography/index.tsx","components/shopListItem/index.tsx","sections/listItems.section.tsx","components/receiptItem/index.tsx","sections/receiptItems.section.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","styled","div","StyledContainer","StyledFlexContainer","StyledFlexContainerNoBorder","StyledGridRow","section","DEFAULT_SHOP_CONTEXT_DATA","shopItems","addItem","setShopItems","ShopContext","createContext","Provider","ShopProvider","children","useState","value","i","newItems","push","useShop","context","useContext","Error","DEFAULT_RECEIPT_CONTEXT_DATA","totalTax","receiptItems","setReceiptItems","calculateReceipt","ReceiptContext","ReceiptProvider","receiptItemsToAdd","forEach","shopItem","price","quantity","name","type","imported","taxesPercentage","tax","calculateTaxPercentage","retailFullPrice","finalPrice","taxes","newTaxValue","taxValue","separateTax","toFixed","split","cents","parseInt","taxDollar","parseFloat","newCentValue","calculateValueToAdd","receiptItemToAdd","useReceipt","Providers","StyledButton","button","Button","label","onClick","disabled","TextInputContainer","StyledInput","input","InputLabel","TextInput","changeValue","changeChecked","checked","onChange","e","target","AddItemsSection","setName","setPrice","setType","setImported","setQuantity","style","minHeight","margin","commonCSS","css","StyledH1","h1","StyledH2","h2","StyledH3","h3","StyledH4","h4","StyledH5","h5","StyledH6","h6","StyledP","p","Typography","text","ShopListItem","item","toString","ListItemsSection","props","length","map","index","ReceiptListItem","ReceiptItemsSection","receiptItem","reduce","acc","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAEaA,EAAMC,IAAOC,IAAV,6KASHC,EAAkBF,IAAOC,IAAV,yIAOfE,EAAsBH,IAAOC,IAAV,qJAQnBG,EAA8BJ,IAAOC,IAAV,0HAQ3BI,EAAgBL,IAAOM,QAAV,8D,sBClBpBC,EAA6C,CACjDC,UAAW,GACXC,QAAS,kBAAM,MACfC,aAAc,kBAAM,OAEhBC,EAAcC,wBAA+BL,GAE3CM,EAAaF,EAAbE,SAEKC,EAAyB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACpBC,mBAAqB,IADD,mBAC/CR,EAD+C,KACpCE,EADoC,KAQtD,OACE,cAACG,EAAD,CAAUI,MAAO,CAAET,YAAWC,QANhB,SAACS,GACf,IAAMC,EAAQ,YAAOX,GACrBW,EAASC,KAAKF,GACdR,EAAaS,IAG0BT,gBAAvC,SAAwDK,KAW7CM,EAPC,WACd,IAAMC,EAAUC,qBAAWZ,GAE3B,IAAKW,EAAS,MAAM,IAAIE,MAAM,8CAC9B,OAAOF,GCrBHG,EAAmD,CACvDC,SAAU,EACVC,aAAc,GACdC,gBAAiB,kBAAM,MACvBC,iBAAkB,kBAAM,OAEpBC,EAAiBlB,wBACrBa,GAGMZ,EAAaiB,EAAbjB,SAEKkB,EAA4B,SAAC,GAAkB,IAAhBhB,EAAe,EAAfA,SAClCP,EAAca,IAAdb,UADiD,EAEjBQ,mBAAwB,IAFP,mBAElDW,EAFkD,KAEpCC,EAFoC,OAGtCZ,mBAAS,GAArBU,EAHkD,oBA2DzD,OACE,cAAC,EAAD,CACET,MAAO,CACLS,WACAC,eACAC,kBACAC,iBAlCmB,WACvB,IAAMG,EAAmC,GACzCxB,EAAUyB,SAAQ,SAACC,GAAc,IACvBC,EAA0CD,EAA1CC,MAAOC,EAAmCF,EAAnCE,SAAUC,EAAyBH,EAAzBG,KAAMC,EAAmBJ,EAAnBI,KAAMC,EAAaL,EAAbK,SAC/BC,EA9BqB,SAACN,GAC9B,IAAIO,EAAM,EAMV,MALsB,UAAlBP,EAASI,OACXG,GAAO,GAELP,EAASK,WAAUE,GAAO,IAEvBA,EAuBmBC,CAAuBR,GACzCS,EAAkBR,EAAQC,EAC5BQ,EAAaD,EACbE,EAAQ,EACZ,GAAIL,EAAiB,CACnB,IACMM,EA1BgB,SAACC,GAC3B,IACMC,EADgBD,EAASE,QAAQ,GACLC,MAAM,KAClCC,EAAQC,SAASJ,EAAY,IACnC,GAAIG,EAAQ,GAAI,CACd,IAAME,EAAYD,SAASJ,EAAY,IAAM,EAE7C,OADoBM,WAAWD,EAAY,OAG7C,IAEME,EAAeJ,GADF,EADNA,EAAQ,GAIrB,OADoBG,WAAWN,EAAY,GAAK,IAAMO,GAc9BC,CADDb,EAAkBH,EAAmB,KAExDI,EAAaU,YAAYX,EAAkBG,GAAaG,QAAQ,IAChEJ,EAAQC,EAAcV,EAExB,IAAMqB,EAAmB,CACvBb,aACAL,WACAF,OACAF,QACAC,WACAS,QACAL,kBACAF,QAEFN,EAAkBZ,KAAKqC,MAEzB7B,EAAgB,GAAD,OAAKI,MAGpB,SAQGjB,KAaQ2C,EARI,WACjB,IAAMpC,EAAUC,qBAAWO,GAE3B,IAAKR,EACH,MAAM,IAAIE,MAAM,iDAClB,OAAOF,GCnGMqC,EARa,SAAC,GAAkB,IAAhB5C,EAAe,EAAfA,SAC7B,OACE,cAAC,EAAD,UACE,cAAC,EAAD,UAAkBA,OCLX6C,EAAe5D,IAAO6D,OAAV,qYCcVC,EARA,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,QAASC,EAA4B,EAA5BA,SAChC,OACE,cAAC,EAAD,CAAgBA,SAAUA,EAAUD,QAASA,EAA7C,SACGD,KCTMG,EAAqBlE,IAAOC,IAAV,wJAQlBkE,EAAcnE,IAAOoE,MAAV,kEAIXC,EAAarE,IAAO+D,MAAV,mFC6BRO,EAhCG,SAAC,GAOI,IANrBP,EAMoB,EANpBA,MACA9C,EAKoB,EALpBA,MACAsD,EAIoB,EAJpBA,YACAjC,EAGoB,EAHpBA,KACAkC,EAEoB,EAFpBA,cACAC,EACoB,EADpBA,QAEA,OACE,eAAC,EAAD,WACE,cAAC,EAAD,UAAeV,IACf,cAAC,EAAD,CACEzB,KAAMA,EACNrB,MAAOA,EACPwD,QAASA,EACTC,SAAU,SAACC,GACHH,GACS,aAATlC,GACFkC,EAAcG,EAAEC,OAAOH,SAGrBF,GACS,aAATjC,GACFiC,EAAYI,EAAEC,OAAO3D,cCqCpB4D,EAjES,WAAO,IACrBpE,EAAYY,IAAZZ,QADoB,EAEJO,mBAAS,QAFL,mBAErBqB,EAFqB,KAEfyC,EAFe,OAGF9D,mBAAS,SAHP,mBAGrBmB,EAHqB,KAGd4C,EAHc,OAIJ/D,mBAEtB,SAN0B,mBAIrBsB,EAJqB,KAIf0C,EAJe,OAOIhE,oBAAS,GAPb,mBAOrBuB,EAPqB,KAOX0C,EAPW,OAQIjE,mBAAS,KARb,mBAQrBoB,EARqB,KAQX8C,EARW,KAS5B,OACE,eAAC,EAAD,WACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAWnB,MAAM,OAAO9C,MAAOoB,EAAMkC,YAAaO,IAClD,cAAC,EAAD,CACExC,KAAK,SACLyB,MAAM,QACN9C,MAAOkB,EACPoC,YAAaQ,IAEf,cAAC,EAAD,CACEzC,KAAK,SACLyB,MAAM,WACN9C,MAAOmB,EACPmC,YAAaW,OAGjB,eAAC,EAAD,WACE,cAAC,EAAD,CACE5C,KAAK,WACLyB,MAAM,YACNU,QAASlC,EACTiC,cAAeS,IAEjB,yBACEhE,MAAOqB,EACP6C,MAAO,CAAEC,UAAW,MAAOC,OAAQ,QACnCX,SAAU,SAACC,GAAD,OACRK,EACEL,EAAEC,OAAO3D,QALf,UASE,wBAAQgD,UAAQ,EAAhB,yBACA,wBAAQhD,MAAM,QAAd,mBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,mBAAd,oCAGJ,cAAC,EAAD,CACE+C,QAAS,kBACPvD,EAAQ,CACN4B,OACAF,MAAOmB,WAAWnB,GAClBI,WACAD,OACAF,SAAUgB,SAAShB,MAGvB2B,MAAM,qBC/DRuB,EAAYC,YAAH,6CAIFC,EAAWxF,IAAOyF,GAAV,kCACjBH,GAESI,GAAW1F,IAAO2F,GAAV,kCACjBL,GAESM,GAAW5F,IAAO6F,GAAV,kCACjBP,GAESQ,GAAW9F,IAAO+F,GAAV,kCACjBT,GAESU,GAAWhG,IAAOiG,GAAV,kCACjBX,GAESY,GAAWlG,IAAOmG,GAAV,kCACjBb,GAESc,GAAUpG,IAAOqG,EAAV,kCAChBf,GCKWgB,GAd+B,SAAC,GAA0B,IAAD,IAAvBhE,YAAuB,MAAhB,IAAgB,EAAXiE,EAAW,EAAXA,KAW3D,MAVsC,CACpCd,GAAI,cAAC,EAAD,UAAac,IACjBZ,GAAI,cAAC,GAAD,UAAaY,IACjBV,GAAI,cAAC,GAAD,UAAaU,IACjBR,GAAI,cAAC,GAAD,UAAaQ,IACjBN,GAAI,cAAC,GAAD,UAAaM,IACjBJ,GAAI,cAAC,GAAD,UAAaI,IACjBF,EAAG,cAAC,GAAD,UAAYE,KAGGjE,ICWPkE,GA7B+B,SAAC,GAExC,IAAD,IADJC,KAAQpE,EACJ,EADIA,KAAMF,EACV,EADUA,MAAOI,EACjB,EADiBA,SAAUD,EAC3B,EAD2BA,KAAMF,EACjC,EADiCA,SAErC,OACE,eAAC,EAAD,WACE,eAAC,EAAD,WACE,cAAC,GAAD,CAAYE,KAAK,KAAKiE,KAAK,SAC3B,cAAC,GAAD,CAAYjE,KAAK,KAAKiE,KAAMlE,OAE9B,eAAC,EAAD,WACE,cAAC,GAAD,CAAYC,KAAK,KAAKiE,KAAK,UAC3B,cAAC,GAAD,CAAYjE,KAAK,KAAKiE,KAAMpE,EAAMuE,gBAEpC,eAAC,EAAD,WACE,cAAC,GAAD,CAAYpE,KAAK,KAAKiE,KAAK,cAC3B,cAAC,GAAD,CAAYjE,KAAK,KAAKiE,KAAMhE,EAAW,MAAQ,UAEjD,eAAC,EAAD,WACE,cAAC,GAAD,CAAYD,KAAK,KAAKiE,KAAK,SAC3B,cAAC,GAAD,CAAYjE,KAAK,KAAKiE,KAAMjE,OAE9B,eAAC,EAAD,WACE,cAAC,GAAD,CAAYA,KAAK,KAAKiE,KAAK,aAC3B,cAAC,GAAD,CAAYjE,KAAK,KAAKiE,KAAMnE,EAASsE,oBCJ9BC,GApB2B,SAACC,GAAW,IAC5CpG,EAAca,IAAdb,UAD2C,EAELkD,IAAtC7B,EAF2C,EAE3CA,iBAAkBD,EAFyB,EAEzBA,gBAC1B,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CACEmC,MAAM,oBACNE,UAAWzD,EAAUqG,OACrB7C,QAAS,WACPpC,EAAgB,IAChBC,OAGHrB,EAAUsG,KAAI,SAACL,EAAMM,GAAP,OACb,cAAC,GAAD,CAA0BN,KAAMA,GAAbM,UCYZC,GAzBqC,SAAC,GAE9C,IAAD,IADJP,KAAQpE,EACJ,EADIA,KAAMD,EACV,EADUA,SAAUQ,EACpB,EADoBA,WAAYC,EAChC,EADgCA,MAAOL,EACvC,EADuCA,gBAE3C,OACE,eAAC,EAAD,WACE,eAAC,EAAD,WACE,cAAC,GAAD,CAAYF,KAAK,KAAKiE,KAAK,aAC3B,cAAC,GAAD,CAAYjE,KAAK,KAAKiE,KAAMnE,EAASsE,gBAEvC,eAAC,EAAD,WACE,cAAC,GAAD,CAAYpE,KAAK,KAAKiE,KAAK,SAC3B,cAAC,GAAD,CAAYjE,KAAK,KAAKiE,KAAMlE,OAE9B,eAAC,EAAD,WACE,cAAC,GAAD,CAAYC,KAAK,KAAKiE,KAAI,qBAAgB/D,EAAhB,QAC1B,cAAC,GAAD,CAAYF,KAAK,KAAKiE,KAAM1D,EAAM6D,gBAEpC,eAAC,EAAD,WACE,cAAC,GAAD,CAAYpE,KAAK,KAAKiE,KAAK,gBAC3B,cAAC,GAAD,CAAYjE,KAAK,KAAKiE,KAAM3D,EAAW8D,oBCYhCO,GAhCiD,SAACL,GAAW,IAClEjF,EAAiB+B,IAAjB/B,aAER,OACE,eAAC,EAAD,WACGA,EAAamF,KAAI,SAACI,EAAaH,GAAd,OAChB,cAAC,GAAD,CAA6BN,KAAMS,GAAbH,QAErBpF,EAAakF,QACd,qCACE,cAAC,GAAD,CACEvE,KAAK,KACLiE,KACE,cACA5E,EAAawF,QAAO,SAACC,EAAKX,GAAN,OAAeW,EAAMX,EAAK5D,QAAO,GAAGI,QAAQ,KAGpE,cAAC,GAAD,CACEX,KAAK,KACLiE,KACE,gBACA5E,EACGwF,QAAO,SAACC,EAAKX,GAAN,OAAeW,EAAMX,EAAK7D,aAAY,GAC7C8D,oBCTF3G,OAhBf,WACE,OACE,cAAC,EAAD,UACE,eAAC,EAAD,WACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,GAAD,OAEF,cAAC,EAAD,UACE,cAAC,GAAD,YCDKsH,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.1f91fe4b.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const App = styled.div`\r\n  background-color: #282c34;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: row;\r\n  font-size: calc(10px + 1vmin);\r\n  color: white;\r\n`;\r\n\r\nexport const StyledContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0.2em;\r\n  margin: 0.2em;\r\n  border: 2px solid gray;\r\n`;\r\nexport const StyledFlexContainer = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  padding: 0.2em;\r\n  margin: 0.2em;\r\n  border: 2px solid gray;\r\n`;\r\nexport const StyledFlexContainerNoBorder = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  padding: 0.2em;\r\n  margin: 0.2em;\r\n`;\r\n\r\nexport const StyledGridRow = styled.section`\r\n  display: flex;\r\n  width: auto;\r\n`;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { createContext } from \"react\";\r\n\r\nexport interface ShopItem {\r\n  name: string;\r\n  price: number;\r\n  type: \"Book\" | \"Food\" | \"Medical Product\" | \"Other\";\r\n  imported: boolean;\r\n  quantity: number;\r\n}\r\n\r\ninterface ShopContextData {\r\n  shopItems: ShopItem[];\r\n  setShopItems: (i: ShopItem[]) => void;\r\n  addItem: (i: ShopItem) => void;\r\n}\r\nconst DEFAULT_SHOP_CONTEXT_DATA: ShopContextData = {\r\n  shopItems: [],\r\n  addItem: () => null,\r\n  setShopItems: () => null,\r\n};\r\nconst ShopContext = createContext<ShopContextData>(DEFAULT_SHOP_CONTEXT_DATA);\r\n\r\nconst { Provider } = ShopContext;\r\n\r\nexport const ShopProvider: React.FC = ({ children }) => {\r\n  const [shopItems, setShopItems] = useState<ShopItem[]>([]);\r\n\r\n  const addItem = (i: ShopItem) => {\r\n    const newItems = [...shopItems];\r\n    newItems.push(i);\r\n    setShopItems(newItems);\r\n  };\r\n  return (\r\n    <Provider value={{ shopItems, addItem, setShopItems }}>{children}</Provider>\r\n  );\r\n};\r\n\r\nconst useShop = (): ShopContextData => {\r\n  const context = useContext(ShopContext);\r\n\r\n  if (!context) throw new Error(\"useGrid must be used within <ShopProvider>\");\r\n  return context;\r\n};\r\n\r\nexport default useShop;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { createContext } from \"react\";\r\nimport useShop, { ShopItem } from \"./shop.context\";\r\n\r\nexport interface ReceiptItem {\r\n  name: string;\r\n  price: number;\r\n  type: \"Book\" | \"Food\" | \"Medical Product\" | string;\r\n  imported: boolean;\r\n  quantity: number;\r\n  finalPrice: number;\r\n  taxes: number;\r\n  taxesPercentage: number;\r\n}\r\n\r\ninterface ReceiptContextData {\r\n  totalTax: number;\r\n  receiptItems: ReceiptItem[];\r\n  setReceiptItems: (i: ReceiptItem[]) => void;\r\n  calculateReceipt: () => void;\r\n}\r\nconst DEFAULT_RECEIPT_CONTEXT_DATA: ReceiptContextData = {\r\n  totalTax: 0,\r\n  receiptItems: [],\r\n  setReceiptItems: () => null,\r\n  calculateReceipt: () => null,\r\n};\r\nconst ReceiptContext = createContext<ReceiptContextData>(\r\n  DEFAULT_RECEIPT_CONTEXT_DATA\r\n);\r\n\r\nconst { Provider } = ReceiptContext;\r\n\r\nexport const ReceiptProvider: React.FC = ({ children }) => {\r\n  const { shopItems } = useShop();\r\n  const [receiptItems, setReceiptItems] = useState<ReceiptItem[]>([]);\r\n  const [totalTax] = useState(0);\r\n\r\n  const calculateTaxPercentage = (shopItem: ShopItem) => {\r\n    let tax = 0;\r\n    if (shopItem.type === \"Other\") {\r\n      tax += 5;\r\n    }\r\n    if (shopItem.imported) tax += 10;\r\n\r\n    return tax;\r\n  };\r\n\r\n  const calculateValueToAdd = (taxValue: number) => {\r\n    const fixedTaxValue = taxValue.toFixed(2);\r\n    const separateTax = fixedTaxValue.split(\".\");\r\n    const cents = parseInt(separateTax[1]);\r\n    if (cents > 95) {\r\n      const taxDollar = parseInt(separateTax[0]) + 1;\r\n      const newTaxValue = parseFloat(taxDollar + \".00\");\r\n      return newTaxValue;\r\n    }\r\n    const rest = cents % 5;\r\n    const centsToAdd = 5 - rest;\r\n    const newCentValue = cents + centsToAdd;\r\n    const newTaxValue = parseFloat(separateTax[0] + \".\" + newCentValue);\r\n    return newTaxValue;\r\n  };\r\n\r\n  const calculateReceipt = () => {\r\n    const receiptItemsToAdd: ReceiptItem[] = [];\r\n    shopItems.forEach((shopItem) => {\r\n      const { price, quantity, name, type, imported } = shopItem;\r\n      const taxesPercentage = calculateTaxPercentage(shopItem);\r\n      const retailFullPrice = price * quantity;\r\n      let finalPrice = retailFullPrice;\r\n      let taxes = 0;\r\n      if (taxesPercentage) {\r\n        const taxValue1 = (retailFullPrice * taxesPercentage) / 100;\r\n        const newTaxValue = calculateValueToAdd(taxValue1);\r\n        finalPrice = parseFloat((retailFullPrice + newTaxValue).toFixed(2));\r\n        taxes = newTaxValue * quantity;\r\n      }\r\n      const receiptItemToAdd = {\r\n        finalPrice,\r\n        imported,\r\n        name,\r\n        price,\r\n        quantity,\r\n        taxes,\r\n        taxesPercentage,\r\n        type,\r\n      };\r\n      receiptItemsToAdd.push(receiptItemToAdd);\r\n    });\r\n    setReceiptItems([...receiptItemsToAdd]);\r\n  };\r\n  return (\r\n    <Provider\r\n      value={{\r\n        totalTax,\r\n        receiptItems,\r\n        setReceiptItems,\r\n        calculateReceipt,\r\n      }}\r\n    >\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nconst useReceipt = (): ReceiptContextData => {\r\n  const context = useContext(ReceiptContext);\r\n\r\n  if (!context)\r\n    throw new Error(\"useGrid must be used within <ReceiptProvider>\");\r\n  return context;\r\n};\r\n\r\nexport default useReceipt;\r\n","import React from \"react\";\r\nimport { ReceiptProvider } from \"./context/receipt.context\";\r\nimport { ShopProvider } from \"./context/shop.context\";\r\n\r\nconst Providers: React.FC = ({ children }) => {\r\n  return (\r\n    <ShopProvider>\r\n      <ReceiptProvider>{children}</ReceiptProvider>\r\n    </ShopProvider>\r\n  );\r\n};\r\n\r\nexport default Providers;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledButton = styled.button`\r\n  padding: 1em;\r\n  margin: 0em 2em 0em 2em;\r\n  background-color: #282c34;\r\n  border: 2px solid white;\r\n  color: white;\r\n  font-weight: bold;\r\n  transition: 100ms ease;\r\n  cursor: pointer;\r\n  :hover:active {\r\n    background-color: white;\r\n    color: #282c34;\r\n    cursor: pointer;\r\n  }\r\n  :disabled {\r\n    background-color: gray;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport * as S from \"./styles\";\r\ninterface ButtonProps {\r\n  label: string;\r\n  onClick?: () => void;\r\n  disabled?: boolean;\r\n}\r\n\r\nconst Button = ({ label, onClick, disabled }: ButtonProps) => {\r\n  return (\r\n    <S.StyledButton disabled={disabled} onClick={onClick}>\r\n      {label}\r\n    </S.StyledButton>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import styled from \"styled-components\";\r\n\r\nexport const TextInputContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  flex-grow: initial;\r\n  flex-basis: 25%;\r\n  flex-direction: column;\r\n  margin: 1em;\r\n`;\r\nexport const StyledInput = styled.input`\r\n  font-size: 1em;\r\n  padding: 0.5em;\r\n`;\r\nexport const InputLabel = styled.label`\r\n  color: white;\r\n  font-size: 1em;\r\n  padding: 0.5em;\r\n`;\r\n","import React from \"react\";\r\nimport * as S from \"./styles\";\r\ninterface TextInputProps {\r\n  label?: string;\r\n  value?: string;\r\n  checked?: boolean;\r\n  changeValue?: (s: string) => void;\r\n  changeChecked?: (c: boolean) => void;\r\n  type?: React.HTMLInputTypeAttribute;\r\n}\r\n\r\nconst TextInput = ({\r\n  label,\r\n  value,\r\n  changeValue,\r\n  type,\r\n  changeChecked,\r\n  checked,\r\n}: TextInputProps) => {\r\n  return (\r\n    <S.TextInputContainer>\r\n      <S.InputLabel>{label}</S.InputLabel>\r\n      <S.StyledInput\r\n        type={type}\r\n        value={value}\r\n        checked={checked}\r\n        onChange={(e) => {\r\n          if (!!changeChecked) {\r\n            if (type === \"checkbox\") {\r\n              changeChecked(e.target.checked);\r\n            }\r\n          }\r\n          if (!!changeValue) {\r\n            if (type !== \"checkbox\") {\r\n              changeValue(e.target.value);\r\n            }\r\n          }\r\n        }}\r\n      />\r\n    </S.TextInputContainer>\r\n  );\r\n};\r\n\r\nexport default TextInput;\r\n","import * as GS from \"../global-styles\";\r\nimport React, { useState } from \"react\";\r\nimport Button from \"../components/button\";\r\nimport TextInput from \"../components/TextInput\";\r\nimport useShop from \"../context/shop.context\";\r\n\r\nconst AddItemsSection = () => {\r\n  const { addItem } = useShop();\r\n  const [name, setName] = useState(\"Book\");\r\n  const [price, setPrice] = useState(\"12.49\");\r\n  const [type, setType] = useState<\r\n    \"Book\" | \"Food\" | \"Medical Product\" | \"Other\"\r\n  >(\"Other\");\r\n  const [imported, setImported] = useState(true);\r\n  const [quantity, setQuantity] = useState(\"1\");\r\n  return (\r\n    <GS.StyledContainer>\r\n      <GS.StyledGridRow>\r\n        <TextInput label=\"Name\" value={name} changeValue={setName} />\r\n        <TextInput\r\n          type=\"number\"\r\n          label=\"Price\"\r\n          value={price}\r\n          changeValue={setPrice}\r\n        />\r\n        <TextInput\r\n          type=\"number\"\r\n          label=\"Quantity\"\r\n          value={quantity}\r\n          changeValue={setQuantity}\r\n        />\r\n      </GS.StyledGridRow>\r\n      <GS.StyledGridRow>\r\n        <TextInput\r\n          type=\"checkbox\"\r\n          label=\"Imported?\"\r\n          checked={imported}\r\n          changeChecked={setImported}\r\n        />\r\n        <select\r\n          value={type}\r\n          style={{ minHeight: \"3em\", margin: \"auto\" }}\r\n          onChange={(e) =>\r\n            setType(\r\n              e.target.value as \"Book\" | \"Food\" | \"Medical Product\" | \"Other\"\r\n            )\r\n          }\r\n        >\r\n          <option disabled>Choose Type</option>\r\n          <option value=\"Other\">Other</option>\r\n          <option value=\"Book\">Book</option>\r\n          <option value=\"Food\">Food</option>\r\n          <option value=\"Medical Products\">Medical Products</option>\r\n        </select>\r\n      </GS.StyledGridRow>\r\n      <Button\r\n        onClick={() =>\r\n          addItem({\r\n            name,\r\n            price: parseFloat(price),\r\n            imported,\r\n            type,\r\n            quantity: parseInt(quantity),\r\n          })\r\n        }\r\n        label=\"Confirm Item\"\r\n      />\r\n    </GS.StyledContainer>\r\n  );\r\n};\r\n\r\nexport default AddItemsSection;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nconst commonCSS = css`\r\n  color: white;\r\n`;\r\n\r\nexport const StyledH1 = styled.h1`\r\n  ${commonCSS}\r\n`;\r\nexport const StyledH2 = styled.h2`\r\n  ${commonCSS}\r\n`;\r\nexport const StyledH3 = styled.h3`\r\n  ${commonCSS}\r\n`;\r\nexport const StyledH4 = styled.h4`\r\n  ${commonCSS}\r\n`;\r\nexport const StyledH5 = styled.h5`\r\n  ${commonCSS}\r\n`;\r\nexport const StyledH6 = styled.h6`\r\n  ${commonCSS}\r\n`;\r\nexport const StyledP = styled.p`\r\n  ${commonCSS}\r\n`;\r\n","import React from \"react\";\r\nimport * as S from \"./styles\";\r\ninterface TypographyTypes {\r\n  h1: any;\r\n  h2: any;\r\n  h3: any;\r\n  h4: any;\r\n  h5: any;\r\n  h6: any;\r\n  p: any;\r\n}\r\ninterface TypographyProps {\r\n  type?: keyof TypographyTypes;\r\n  text: string;\r\n}\r\n\r\nconst Typography: React.FC<TypographyProps> = ({ type = \"p\", text }) => {\r\n  const typographies: TypographyTypes = {\r\n    h1: <S.StyledH1>{text}</S.StyledH1>,\r\n    h2: <S.StyledH2>{text}</S.StyledH2>,\r\n    h3: <S.StyledH3>{text}</S.StyledH3>,\r\n    h4: <S.StyledH4>{text}</S.StyledH4>,\r\n    h5: <S.StyledH5>{text}</S.StyledH5>,\r\n    h6: <S.StyledH6>{text}</S.StyledH6>,\r\n    p: <S.StyledP>{text}</S.StyledP>,\r\n  };\r\n\r\n  return typographies[type];\r\n};\r\n\r\nexport default Typography;\r\n","import React from \"react\";\r\nimport { ShopItem } from \"../../context/shop.context\";\r\nimport * as GS from \"../../global-styles\";\r\nimport Typography from \"../typography\";\r\n\r\ninterface ShopItemProps {\r\n  item: ShopItem;\r\n}\r\n\r\nconst ShopListItem: React.FC<ShopItemProps> = ({\r\n  item: { name, price, imported, type, quantity },\r\n}) => {\r\n  return (\r\n    <GS.StyledGridRow>\r\n      <GS.StyledFlexContainer>\r\n        <Typography type=\"h6\" text=\"Name\" />\r\n        <Typography type=\"h1\" text={name} />\r\n      </GS.StyledFlexContainer>\r\n      <GS.StyledFlexContainer>\r\n        <Typography type=\"h6\" text=\"price\" />\r\n        <Typography type=\"h1\" text={price.toString()} />\r\n      </GS.StyledFlexContainer>\r\n      <GS.StyledFlexContainer>\r\n        <Typography type=\"h6\" text=\"Imported?\" />\r\n        <Typography type=\"h1\" text={imported ? \"Yes\" : \"No\"} />\r\n      </GS.StyledFlexContainer>\r\n      <GS.StyledFlexContainer>\r\n        <Typography type=\"h6\" text=\"Type\" />\r\n        <Typography type=\"h1\" text={type} />\r\n      </GS.StyledFlexContainer>\r\n      <GS.StyledFlexContainer>\r\n        <Typography type=\"h6\" text=\"Quantity\" />\r\n        <Typography type=\"h1\" text={quantity.toString()} />\r\n      </GS.StyledFlexContainer>\r\n    </GS.StyledGridRow>\r\n  );\r\n};\r\n\r\nexport default ShopListItem;\r\n","import React from \"react\";\r\nimport Button from \"../components/button\";\r\nimport ShopListItem from \"../components/shopListItem\";\r\nimport useReceipt from \"../context/receipt.context\";\r\nimport useShop from \"../context/shop.context\";\r\nimport * as GS from \"../global-styles\";\r\ninterface Props {}\r\n\r\nconst ListItemsSection: React.FC<Props> = (props) => {\r\n  const { shopItems } = useShop();\r\n  const { calculateReceipt, setReceiptItems } = useReceipt();\r\n  return (\r\n    <GS.StyledFlexContainer>\r\n      <Button\r\n        label=\"Calculate receipt\"\r\n        disabled={!shopItems.length}\r\n        onClick={() => {\r\n          setReceiptItems([]);\r\n          calculateReceipt();\r\n        }}\r\n      />\r\n      {shopItems.map((item, index) => (\r\n        <ShopListItem key={index} item={item} />\r\n      ))}\r\n    </GS.StyledFlexContainer>\r\n  );\r\n};\r\n\r\nexport default ListItemsSection;\r\n","import React from \"react\";\r\nimport { ReceiptItem } from \"../../context/receipt.context\";\r\nimport * as GS from \"../../global-styles\";\r\nimport Typography from \"../typography\";\r\n\r\ninterface ReceiptItemProps {\r\n  item: ReceiptItem;\r\n}\r\n\r\nconst ReceiptListItem: React.FC<ReceiptItemProps> = ({\r\n  item: { name, quantity, finalPrice, taxes, taxesPercentage },\r\n}) => {\r\n  return (\r\n    <GS.StyledGridRow>\r\n      <GS.StyledFlexContainer>\r\n        <Typography type=\"h6\" text=\"Quantity\" />\r\n        <Typography type=\"h1\" text={quantity.toString()} />\r\n      </GS.StyledFlexContainer>\r\n      <GS.StyledFlexContainer>\r\n        <Typography type=\"h6\" text=\"Name\" />\r\n        <Typography type=\"h1\" text={name} />\r\n      </GS.StyledFlexContainer>\r\n      <GS.StyledFlexContainer>\r\n        <Typography type=\"h6\" text={`Tax added (${taxesPercentage}%)`} />\r\n        <Typography type=\"h1\" text={taxes.toString()} />\r\n      </GS.StyledFlexContainer>\r\n      <GS.StyledFlexContainer>\r\n        <Typography type=\"h6\" text=\"Final price\" />\r\n        <Typography type=\"h1\" text={finalPrice.toString()} />\r\n      </GS.StyledFlexContainer>\r\n    </GS.StyledGridRow>\r\n  );\r\n};\r\n\r\nexport default ReceiptListItem;\r\n","import React from \"react\";\r\nimport ReceiptListItem from \"../components/receiptItem\";\r\nimport Typography from \"../components/typography\";\r\nimport useReceipt from \"../context/receipt.context\";\r\n\r\nimport * as GS from \"../global-styles\";\r\ninterface ReceiptItemsSectionProps {}\r\n\r\nconst ReceiptItemsSection: React.FC<ReceiptItemsSectionProps> = (props) => {\r\n  const { receiptItems } = useReceipt();\r\n\r\n  return (\r\n    <GS.StyledFlexContainerNoBorder>\r\n      {receiptItems.map((receiptItem, index) => (\r\n        <ReceiptListItem key={index} item={receiptItem} />\r\n      ))}\r\n      {!!receiptItems.length && (\r\n        <>\r\n          <Typography\r\n            type=\"h4\"\r\n            text={\r\n              \"Total tax: \" +\r\n              receiptItems.reduce((acc, item) => acc + item.taxes, 0).toFixed(2)\r\n            }\r\n          />\r\n          <Typography\r\n            type=\"h4\"\r\n            text={\r\n              \"Total price: \" +\r\n              receiptItems\r\n                .reduce((acc, item) => acc + item.finalPrice, 0)\r\n                .toString()\r\n            }\r\n          />\r\n        </>\r\n      )}\r\n    </GS.StyledFlexContainerNoBorder>\r\n  );\r\n};\r\n\r\nexport default ReceiptItemsSection;\r\n","import React from \"react\";\nimport * as GS from \"./global-styles\";\nimport Providers from \"./providers\";\nimport AddItemsSection from \"./sections/additems.section\";\nimport ListItemsSection from \"./sections/listItems.section\";\nimport ReceiptItemsSection from \"./sections/receiptItems.section\";\nfunction App() {\n  return (\n    <GS.App>\n      <Providers>\n        <GS.StyledFlexContainer>\n          <AddItemsSection />\n          <ListItemsSection />\n        </GS.StyledFlexContainer>\n        <GS.StyledFlexContainer>\n          <ReceiptItemsSection />\n        </GS.StyledFlexContainer>\n      </Providers>\n    </GS.App>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}